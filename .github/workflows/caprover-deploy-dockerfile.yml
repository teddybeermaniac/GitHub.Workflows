# Builds a Dockerfile, pushes the image to gchr.io, and deploys it to the specified CapRover instance.
name: 'CapRover deploy Dockerfile'
permissions:
  contents: read
  packages: write

on:
  workflow_call:
    inputs:
      context:
        description: 'Path to Docker context (default: .)'
        type: string
        required: false
        default: .

      platforms:
        description: 'Platforms to build the image for (default: amd64)'
        type: string
        required: false
        default: amd64

      application:
        description: 'Application name'
        type: string
        required: true

    secrets:
      host:
        description: 'URL to CapRover instance'
        required: true

      token:
        description: 'Application token'
        required: true

      header_name:
        description: 'Additional header name'
        required: false

      header_value:
        description: 'Additional header value'
        required: false

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    outputs:
      image: '${{ env.IMAGE }}'

    steps:
      - name: 'Set environment variables'
        run: |
          IMAGE="ghcr.io/${GITHUB_REPOSITORY%/*}/$(echo "${GITHUB_REPOSITORY#*/}" | tr '[A-Z]' '[a-z]' | sed -E 's/[^a-z0-9._-]/_/g'):${GITHUB_SHA::7}"
          printf 'IMAGE=%s\n' "${IMAGE}" >> "${GITHUB_ENV}"

      - name: 'Checkout ${{ inputs.repository }} repository'
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: 'Login to ghcr.io'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: '${{ github.actor }}'
          password: '${{ secrets.GITHUB_TOKEN }}'

      - name: 'Set up QEMU for ${{ inputs.platforms }} platforms'
        if: '${{ inputs.platforms != ''amd64'' }}'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: '${{ inputs.platforms }}'

      - name: 'Build and push ${{ env.IMAGE }} image'
        uses: docker/build-push-action@v4
        with:
          context: '${{ inputs.context }}'
          platforms: '${{ inputs.platforms }}'
          pull: true
          push: true
          tags: '${{ env.IMAGE }}'

  deploy:
    name: 'Deploy'
    needs: build
    uses: ./.github/workflows/caprover-deploy-image.yml
    with:
      image: '${{ needs.build.outputs.image }}'
      application: '${{ inputs.application }}'
    secrets:
      host: '${{ secrets.host }}'
      token: '${{ secrets.token }}'
      header_name: '${{ secrets.header_name }}'
      header_value: '${{ secrets.header_value }}'
